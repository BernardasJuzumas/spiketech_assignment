version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - postgrest
    networks:
      - widgets-net

  postgrest:
    image: postgrest/postgrest:latest
    environment:
      PGRST_DB_URI: postgres://authenticator:mysecretpassword@db:5432/postgres
      PGRST_DB_SCHEMA: widgets
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_POOL: 100
    deploy:
      replicas: 10
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M
    networks:
      - widgets-net

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
    #  - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - widgets-net
    shm_size: "512mb"
    #command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    command: #testing passing cli arguments directly
      - "postgres"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "max_connections=1000"
    deploy:
      resources:
        limits:
          memory: 4GB
        reservations:
          memory: 2GB

  python-loader:
    build: ./python-loader
    command: python /app/loader.py
    volumes:
      - ./python-loader:/app
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: -0SqLweaqjZhf8bKwlr3rgOfFosmOEygbc7uEotD3uey7RPRYLA2DZA75eJyRV2SX1f3VbYVQJHK_ma08QHr3g==
      INFLUXDB_ORG: widgets
      INFLUXDB_BUCKET: my-bucket
      PING__INTERVAL: 0.1
    depends_on:
      - postgrest
      - influxdb
    networks:
      - widgets-net
    deploy:
      replicas: 10
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 64M

  influxdb:
    image: influxdb:latest
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influxdbadmin
      DOCKER_INFLUXDB_INIT_PASSWORD: mysecretpassword
      DOCKER_INFLUXDB_INIT_ORG: widgets
      DOCKER_INFLUXDB_INIT_BUCKET: my-bucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: -0SqLweaqjZhf8bKwlr3rgOfFosmOEygbc7uEotD3uey7RPRYLA2DZA75eJyRV2SX1f3VbYVQJHK_ma08QHr3g==
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    networks:
      - widgets-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - influxdb
    networks:
      - widgets-net

volumes:
  influxdb-data:
  grafana-data:

networks:
  widgets-net:
    driver: bridge