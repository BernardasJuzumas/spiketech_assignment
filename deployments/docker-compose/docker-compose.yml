services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - postgrest
    networks:
      - widgets-net

  postgrest:
    image: postgrest/postgrest:latest
    environment:
      PGRST_DB_URI: postgres://authenticator:mysecretpassword@db:5432/postgres
      PGRST_DB_SCHEMA: widgets
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_POOL: 200
      #PGRST_SERVER_TIMING_ENABLED: true #provides timing info for each request in the response header, it would be great to collect this data when testing
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M
    networks:
      - widgets-net

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - widgets-net
    shm_size: "512mb"
    command: #testing passing cli arguments directly
      - "postgres"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "max_connections=1000"
    deploy:
      resources:
        limits:
          memory: 4GB
        reservations:
          memory: 2GB

  # python-loader:
  #   build: ./python-loader
  #   command: python /app/loader.py
  #   volumes:
  #     - ./python-loader:/app
  #   environment:
  #     QUEST_DB_URL: http://questdb:9009
  #     PING__INTERVAL: 0.01
  #   depends_on:
  #     - postgrest
  #     - questdb
  #   networks:
  #     - widgets-net
  #   deploy:
  #     replicas: 10
  #     resources:
  #       limits:
  #         cpus: '0.1'
  #         memory: 128M
  #       reservations:
  #         cpus: '0.05'
  #         memory: 64M

  # questdb:
  #   image: questdb/questdb:latest
  #   ports:
  #     - "9009:9009"
  #     - "9000:9000"
  #     - "8812"
  #   volumes:
  #     - questdb-data:/questdb/data
  #   networks:
  #     - widgets-net

#   # grafana:
#   #   image: grafana/grafana:latest
#   #   ports:
#   #     - "3001:3000"
#   #   environment:
#   #     GF_SECURITY_ADMIN_PASSWORD: admin
#   #     GF_INSTALL_PLUGINS: questdb-questdb-datasource
#   #   volumes:
#   #     - grafana-data:/var/lib/grafana
#   #     #- ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
#   #     #- ./grafana/dashboards:/var/lib/grafana/dashboards
#   #   depends_on:
#   #     - questdb
#   #   networks:
#   #     - widgets-net

volumes:
  grafana-data:
  questdb-data:

networks:
  widgets-net:
    driver: bridge